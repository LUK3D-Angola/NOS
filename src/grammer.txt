expression      : term ((PLUS|MINUS) term)*

term            : factor ((MULTIPLY|DIVIDE) factor) *

factor          : INTEGER|FLOAT

(((23+42)/(56*98))-23)

( Program Expression ( Term NumericLiteral: 23 ((Operator: +) NumericLiteral: 5) ((Operator NumericLiteral: 0 ((Operator: undefined)NumericLiteral: 0)) Term undefined) ) )



(Program  (Expression (Term NumericLiteral: 23  ((Operator: +) NumericLiteral: 42)   ((Operator ) Term undefined))))
(Program  (Expression (Term NumericLiteral: 23  ((Operator: +) NumericLiteral: 42) )))
(Program  
    (Expression 
        (Term NumericLiteral: 23  
            (
                (Operator: +) 
                NumericLiteral: 42
            )  
            (
                (Operator /) 
                Term NumericLiteral: 56  
                (
                    (Operator: *) 
                    NumericLiteral: 98
                ) 
            )
        )
    )
)

(
    operator: + (1,2) 
    (BinaryExpression: + (2)) 
    (
        BinaryExpression: 
        (
            operator: + (32,21) 
            (
                BinaryExpression: + (21)
            )
        )
    )
)


(
    BinaryExpression: operator: + (1,2) 
    (
        (BinaryExpression: operator: + (32,21))
    )
)

1+2*32/15
(ComplexExpression: Operator: * 
    (
        BinaryExpression: operator: + 
            (
                NumericLiteral: 1, 
                NumericLiteral: 2
            ) , 
            (
                (
                    BinaryExpression: operator: / 
                    (
                        NumericLiteral: 32, 
                        NumericLiteral: 15
                    )
                )
            )
    )
)


1+2*32/3*5
(
    ComplexExpression: Operator: * 
        (
            (
                BinaryExpression: operator: + 
                    (
                        NumericLiteral: 1, NumericLiteral: 2
                    ) , 
                    (
                        ComplexExpression: Operator: / 
                            (
                                BinaryExpression: NumericLiteral: 32 , 
                                (
                                    (
                                        BinaryExpression: operator: * 
                                            (
                                                NumericLiteral: 3, NumericLiteral: 5
                                            )
                                    )
                                )
                            )
                    )
            )
        )
)